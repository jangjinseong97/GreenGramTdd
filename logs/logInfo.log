[2024-12-30 09:40:04 INFO background-preinit] [org.hibernate.validator.internal.util.Version] HV000001: Hibernate Validator 8.0.1.Final
[2024-12-30 09:40:04 INFO restartedMain] [com.green.greengram.GreenGramTdd] Starting GreenGramTdd using Java 17.0.13 with PID 6540 (D:\Students\jang jin seong\GreenGramTdd\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramTdd)
[2024-12-30 09:40:04 INFO restartedMain] [com.green.greengram.GreenGramTdd] No active profile set, falling back to 1 default profile: "default"
[2024-12-30 09:40:04 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-30 09:40:04 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-30 09:40:05 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-30 09:40:05 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-30 09:40:05 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-30 09:40:05 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-30 09:40:06 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-30 09:40:06 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 1097 ms
[2024-12-30 09:40:06 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver3
[2024-12-30 09:40:06 INFO restartedMain] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-30 09:40:06 INFO restartedMain] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4a96caa6
[2024-12-30 09:40:06 INFO restartedMain] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-30 09:40:06 WARN restartedMain] [org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration] 

Using generated security password: 739d9cab-195c-48c2-bddb-c782af6ae8cb

This generated password is for development use only. Your security configuration must be updated before running your application in production.

[2024-12-30 09:40:06 INFO restartedMain] [org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer] Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
[2024-12-30 09:40:06 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-30 09:40:06 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-30 09:40:06 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-30 09:40:06 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-30 09:40:06 INFO restartedMain] [com.green.greengram.GreenGramTdd] Started GreenGramTdd in 2.374 seconds (process running for 2.851)
[2024-12-30 09:40:39 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-30 09:40:39 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-30 09:40:39 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-30 09:40:39 INFO http-nio-8080-exec-1] [com.green.greengram.config.jwt.TokenAuthenticationFilter] AuthorizationHeader: null
[2024-12-30 09:40:39 INFO http-nio-8080-exec-1] [com.green.greengram.config.jwt.TokenAuthenticationFilter] Token: null
[2024-12-30 09:40:39 INFO http-nio-8080-exec-2] [com.green.greengram.config.jwt.TokenAuthenticationFilter] AuthorizationHeader: null
[2024-12-30 09:40:39 INFO http-nio-8080-exec-2] [com.green.greengram.config.jwt.TokenAuthenticationFilter] Token: null
[2024-12-30 09:40:39 INFO http-nio-8080-exec-7] [com.green.greengram.config.jwt.TokenAuthenticationFilter] AuthorizationHeader: null
[2024-12-30 09:40:39 INFO http-nio-8080-exec-7] [com.green.greengram.config.jwt.TokenAuthenticationFilter] Token: null
[2024-12-30 09:40:39 INFO http-nio-8080-exec-10] [com.green.greengram.config.jwt.TokenAuthenticationFilter] AuthorizationHeader: null
[2024-12-30 09:40:39 INFO http-nio-8080-exec-10] [com.green.greengram.config.jwt.TokenAuthenticationFilter] Token: null
[2024-12-30 09:40:39 INFO http-nio-8080-exec-5] [com.green.greengram.config.jwt.TokenAuthenticationFilter] AuthorizationHeader: null
[2024-12-30 09:40:39 INFO http-nio-8080-exec-5] [com.green.greengram.config.jwt.TokenAuthenticationFilter] Token: null
[2024-12-30 09:40:39 INFO http-nio-8080-exec-8] [com.green.greengram.config.jwt.TokenAuthenticationFilter] AuthorizationHeader: null
[2024-12-30 09:40:39 INFO http-nio-8080-exec-6] [com.green.greengram.config.jwt.TokenAuthenticationFilter] AuthorizationHeader: null
[2024-12-30 09:40:39 INFO http-nio-8080-exec-8] [com.green.greengram.config.jwt.TokenAuthenticationFilter] Token: null
[2024-12-30 09:40:39 INFO http-nio-8080-exec-6] [com.green.greengram.config.jwt.TokenAuthenticationFilter] Token: null
[2024-12-30 09:40:39 INFO http-nio-8080-exec-3] [com.green.greengram.config.jwt.TokenAuthenticationFilter] AuthorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNTE4MDQzNiwiZXhwIjoxNzM1MTgyMjM2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MSxcInJvbGVzXCI6W1wiUk9MRV9VU0VSXCIsXCJBRE1JTlwiXX0ifQ.WyBXwwiqs_eVRBD8MIK1xcaPSy9hXC9PCruus7YBQQWTtirBMEJ4NXIIV8MHwMHOnYZaX1jVurGF-EZFVF5aBw
[2024-12-30 09:40:39 INFO http-nio-8080-exec-3] [com.green.greengram.config.jwt.TokenAuthenticationFilter] Token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNTE4MDQzNiwiZXhwIjoxNzM1MTgyMjM2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MSxcInJvbGVzXCI6W1wiUk9MRV9VU0VSXCIsXCJBRE1JTlwiXX0ifQ.WyBXwwiqs_eVRBD8MIK1xcaPSy9hXC9PCruus7YBQQWTtirBMEJ4NXIIV8MHwMHOnYZaX1jVurGF-EZFVF5aBw
[2024-12-30 09:40:39 INFO http-nio-8080-exec-9] [com.green.greengram.config.jwt.TokenAuthenticationFilter] AuthorizationHeader: null
[2024-12-30 09:40:39 INFO http-nio-8080-exec-9] [com.green.greengram.config.jwt.TokenAuthenticationFilter] Token: null
[2024-12-30 09:40:39 WARN http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg.]
[2024-12-30 09:40:39 INFO http-nio-8080-exec-4] [com.green.greengram.config.jwt.TokenAuthenticationFilter] AuthorizationHeader: null
[2024-12-30 09:40:39 INFO http-nio-8080-exec-4] [com.green.greengram.config.jwt.TokenAuthenticationFilter] Token: null
[2024-12-30 09:40:39 WARN http-nio-8080-exec-3] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] Resolved [io.jsonwebtoken.ExpiredJwtException: JWT expired 337003945 milliseconds ago at 2024-12-26T03:03:56.000Z. Current time: 2024-12-30T00:40:39.945Z. Allowed clock skew: 0 milliseconds.]
[2024-12-30 09:40:39 INFO http-nio-8080-exec-1] [com.green.greengram.config.jwt.TokenAuthenticationFilter] AuthorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNTE4MDQzNiwiZXhwIjoxNzM1MTgyMjM2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MSxcInJvbGVzXCI6W1wiUk9MRV9VU0VSXCIsXCJBRE1JTlwiXX0ifQ.WyBXwwiqs_eVRBD8MIK1xcaPSy9hXC9PCruus7YBQQWTtirBMEJ4NXIIV8MHwMHOnYZaX1jVurGF-EZFVF5aBw
[2024-12-30 09:40:39 INFO http-nio-8080-exec-1] [com.green.greengram.config.jwt.TokenAuthenticationFilter] Token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNTE4MDQzNiwiZXhwIjoxNzM1MTgyMjM2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MSxcInJvbGVzXCI6W1wiUk9MRV9VU0VSXCIsXCJBRE1JTlwiXX0ifQ.WyBXwwiqs_eVRBD8MIK1xcaPSy9hXC9PCruus7YBQQWTtirBMEJ4NXIIV8MHwMHOnYZaX1jVurGF-EZFVF5aBw
[2024-12-30 09:40:39 INFO http-nio-8080-exec-1] [com.green.greengram.user.UserService] refreshToken : eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNTE4NDg4NiwiZXhwIjoxNzM2NDgwODg2LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MSxcInJvbGVzXCI6W1wiUk9MRV9VU0VSXCIsXCJBRE1JTlwiXX0ifQ.SV7oSGuWkBfAbHwobUzFm1b812cB9Xef_pmjOimwfwUR1B4hbRWO7uGO_ZouN4yc1tVboxPlPDsFGD7YGLKJVA
[2024-12-30 09:40:39 INFO http-nio-8080-exec-2] [com.green.greengram.config.jwt.TokenAuthenticationFilter] AuthorizationHeader: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNTUxOTIzOSwiZXhwIjoxNzM1NTIwNDM5LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MSxcInJvbGVzXCI6W1wiUk9MRV9VU0VSXCIsXCJBRE1JTlwiXX0ifQ.5VL_hdvgP8zQfYVFYs7gX1hTKigsZRvLzfGdeQr8tqHaWMChQMPGZ6xwxbUNIiymfocAP5tCT9MAVqVm4jDPcg
[2024-12-30 09:40:39 INFO http-nio-8080-exec-2] [com.green.greengram.config.jwt.TokenAuthenticationFilter] Token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJncmVlbkBncmVlbi5rciIsImlhdCI6MTczNTUxOTIzOSwiZXhwIjoxNzM1NTIwNDM5LCJzaWduZWRVc2VyIjoie1wic2lnbmVkVXNlcklkXCI6MSxcInJvbGVzXCI6W1wiUk9MRV9VU0VSXCIsXCJBRE1JTlwiXX0ifQ.5VL_hdvgP8zQfYVFYs7gX1hTKigsZRvLzfGdeQr8tqHaWMChQMPGZ6xwxbUNIiymfocAP5tCT9MAVqVm4jDPcg
[2024-12-30 09:40:40 INFO http-nio-8080-exec-2] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1,null,0
[2024-12-30 09:40:40 INFO http-nio-8080-exec-2] [com.green.greengram.feed.FeedController] feedC getFeedList p: FeedGetReq(super=Paging(page=1, size=20, sIdx=0), signedUserId=0, profileUserId=null, likeFeed=false)
[2024-12-30 09:40:40 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, writer_user_id AS writerUserId,
        if(nick_name IS NULL , uid, nick_name) AS writerNm,
        pic AS writerPic, contents, location, a.created_at AS createdAt,
        if(c.feed_id IS NULL ,0 , 1) AS isLike
        FROM feed A
        JOIN user B
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

        ORDER BY a.feed_id DESC
        LIMIT 0,20
 {executed in 10 msec}
[2024-12-30 09:40:40 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|feed_id |writer_user_id |writernm |pic                                      |contents     |location |created_at          |islike |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|
|51      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |             |         |2024-12-26 11:15:53 |0      |
|50      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |             |         |2024-12-26 11:15:50 |0      |
|49      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |             |         |2024-12-26 11:15:47 |0      |
|48      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |             |         |2024-12-26 11:15:44 |0      |
|47      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |             |         |2024-12-26 11:15:37 |0      |
|46      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |             |         |2024-12-26 11:15:32 |0      |
|45      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |             |         |2024-12-26 11:15:29 |0      |
|44      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |             |         |2024-12-26 11:15:26 |0      |
|43      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |             |         |2024-12-26 11:15:18 |0      |
|42      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |124          |123      |2024-12-26 11:15:13 |0      |
|41      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |4123         |312      |2024-12-26 11:15:08 |0      |
|40      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |112          |11       |2024-12-26 11:15:04 |0      |
|39      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |`1`1         |1``1     |2024-12-24 14:31:52 |0      |
|38      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |토큰           |연습용      |2024-12-19 11:49:03 |0      |
|35      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |15131        |1532     |2024-12-10 09:50:44 |0      |
|34      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |??           |머말하는거냐   |2024-12-10 09:49:18 |0      |
|33      |9              |머        |null                                     |D            |D        |2024-12-06 13:04:38 |1      |
|31      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |???          |사진어디감    |2024-12-06 12:38:20 |0      |
|27      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |I am panguin |남극       |2024-11-29 17:07:59 |0      |
|26      |1              |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |I am panguin |남극       |2024-11-29 16:46:01 |1      |
|--------|---------------|---------|-----------------------------------------|-------------|---------|--------------------|-------|

[2024-12-30 09:40:40 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 51
 {executed in 1 msec}
[2024-12-30 09:40:40 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|983ee096-2445-453d-8457-04471f7a4f96.jpg |
|-----------------------------------------|

[2024-12-30 09:40:40 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 51
        ORDER BY feed_comment_id DESC
        LIMIT 3, 1
 {executed in 1 msec}
[2024-12-30 09:40:40 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-30 09:40:40 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 50
 {executed in 0 msec}
[2024-12-30 09:40:40 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dc536b6f-f4c6-4381-b3a6-f58cceb33478.jpg |
|-----------------------------------------|

[2024-12-30 09:40:40 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 50
        ORDER BY feed_comment_id DESC
        LIMIT 3, 1
 {executed in 0 msec}
[2024-12-30 09:40:40 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-30 09:40:40 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 49
 {executed in 0 msec}
[2024-12-30 09:40:40 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|edd05ae8-f755-4411-af6f-46d6245017f4.jpg |
|-----------------------------------------|

[2024-12-30 09:40:40 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 49
        ORDER BY feed_comment_id DESC
        LIMIT 3, 1
 {executed in 1 msec}
[2024-12-30 09:40:40 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-30 09:40:40 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 48
 {executed in 0 msec}
[2024-12-30 09:40:40 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e1559982-b2c3-455c-a1c9-5b9b4d01f312.jpg |
|-----------------------------------------|

[2024-12-30 09:40:40 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 48
        ORDER BY feed_comment_id DESC
        LIMIT 3, 1
 {executed in 0 msec}
[2024-12-30 09:40:40 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-30 09:40:40 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 47
 {executed in 0 msec}
[2024-12-30 09:40:40 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|375d8976-df72-4786-b242-da33da38e3c7.jpg |
|-----------------------------------------|

[2024-12-30 09:40:40 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 47
        ORDER BY feed_comment_id DESC
        LIMIT 3, 1
 {executed in 0 msec}
[2024-12-30 09:40:40 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-30 09:40:40 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 46
 {executed in 0 msec}
[2024-12-30 09:40:40 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1541fd92-e6ff-4703-962c-8d1ef5b0128f.jpg |
|-----------------------------------------|

[2024-12-30 09:40:40 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 46
        ORDER BY feed_comment_id DESC
        LIMIT 3, 1
 {executed in 0 msec}
[2024-12-30 09:40:40 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-30 09:40:40 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 45
 {executed in 0 msec}
[2024-12-30 09:40:40 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b33fcb6c-6d66-4feb-8495-de8a4538bf29.jpg |
|-----------------------------------------|

[2024-12-30 09:40:40 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 45
        ORDER BY feed_comment_id DESC
        LIMIT 3, 1
 {executed in 0 msec}
[2024-12-30 09:40:40 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-30 09:40:40 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 44
 {executed in 0 msec}
[2024-12-30 09:40:40 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7d88cef5-6179-4b28-83b7-3aace0237de7.jpg |
|-----------------------------------------|

[2024-12-30 09:40:40 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 44
        ORDER BY feed_comment_id DESC
        LIMIT 3, 1
 {executed in 0 msec}
[2024-12-30 09:40:40 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-30 09:40:40 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 43
 {executed in 0 msec}
[2024-12-30 09:40:40 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|760657f4-7fb5-4d2a-a7c7-583ffea5f38e.jpg |
|-----------------------------------------|

[2024-12-30 09:40:40 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 43
        ORDER BY feed_comment_id DESC
        LIMIT 3, 1
 {executed in 0 msec}
[2024-12-30 09:40:40 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-30 09:40:40 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 42
 {executed in 0 msec}
[2024-12-30 09:40:40 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|57e6a7b7-dfce-4acc-b592-faae0c083121.jpg |
|-----------------------------------------|

[2024-12-30 09:40:40 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 42
        ORDER BY feed_comment_id DESC
        LIMIT 3, 1
 {executed in 0 msec}
[2024-12-30 09:40:40 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-30 09:40:40 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 41
 {executed in 0 msec}
[2024-12-30 09:40:40 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|beb04c34-df13-499f-babf-d00b58425978.jpg |
|-----------------------------------------|

[2024-12-30 09:40:40 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 41
        ORDER BY feed_comment_id DESC
        LIMIT 3, 1
 {executed in 0 msec}
[2024-12-30 09:40:40 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-30 09:40:40 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 40
 {executed in 0 msec}
[2024-12-30 09:40:40 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d5b59557-7ec6-4423-81c0-1a799515be08.jpg |
|-----------------------------------------|

[2024-12-30 09:40:40 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 40
        ORDER BY feed_comment_id DESC
        LIMIT 3, 1
 {executed in 0 msec}
[2024-12-30 09:40:40 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-30 09:40:40 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 39
 {executed in 0 msec}
[2024-12-30 09:40:40 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|20bd852d-032c-427f-b31d-b5548f65e3b8.jpg |
|-----------------------------------------|

[2024-12-30 09:40:40 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 39
        ORDER BY feed_comment_id DESC
        LIMIT 3, 1
 {executed in 0 msec}
[2024-12-30 09:40:40 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-30 09:40:40 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 38
 {executed in 0 msec}
[2024-12-30 09:40:40 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4c793942-6917-4612-9d5a-2155e2ae4b14.jpg |
|be5b67c9-31ed-4c48-8942-a3dedff411a5.jpg |
|-----------------------------------------|

[2024-12-30 09:40:40 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 38
        ORDER BY feed_comment_id DESC
        LIMIT 3, 1
 {executed in 0 msec}
[2024-12-30 09:40:40 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-30 09:40:40 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 35
 {executed in 0 msec}
[2024-12-30 09:40:40 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|38e0ee97-73ae-4b4a-8f82-23e79d91a3ae.jpg |
|-----------------------------------------|

[2024-12-30 09:40:40 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 35
        ORDER BY feed_comment_id DESC
        LIMIT 3, 1
 {executed in 0 msec}
[2024-12-30 09:40:40 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-30 09:40:40 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 34
 {executed in 0 msec}
[2024-12-30 09:40:40 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|da3fd470-513f-4cfe-9688-e50c0201cccf.jpg |
|-----------------------------------------|

[2024-12-30 09:40:40 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 34
        ORDER BY feed_comment_id DESC
        LIMIT 3, 1
 {executed in 1 msec}
[2024-12-30 09:40:40 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-30 09:40:40 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 33
 {executed in 0 msec}
[2024-12-30 09:40:40 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|690fa432-d879-4a2e-b395-60f2ca27eb1f.jpg |
|-----------------------------------------|

[2024-12-30 09:40:40 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 33
        ORDER BY feed_comment_id DESC
        LIMIT 3, 1
 {executed in 1 msec}
[2024-12-30 09:40:40 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-30 09:40:40 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 31
 {executed in 0 msec}
[2024-12-30 09:40:40 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ba4e898f-67e9-43fa-85dd-a576f142c147.jpg |
|-----------------------------------------|

[2024-12-30 09:40:40 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 31
        ORDER BY feed_comment_id DESC
        LIMIT 3, 1
 {executed in 1 msec}
[2024-12-30 09:40:40 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-30 09:40:40 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 27
 {executed in 0 msec}
[2024-12-30 09:40:40 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5a0d637a-00c7-441f-a9fa-c0dc68af2602.jpg |
|-----------------------------------------|

[2024-12-30 09:40:40 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 27
        ORDER BY feed_comment_id DESC
        LIMIT 3, 1
 {executed in 0 msec}
[2024-12-30 09:40:40 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|-----------------------------------------|
|user_id |feed_comment_id |comment |writernm |pic                                      |
|--------|----------------|--------|---------|-----------------------------------------|
|1       |36              |2       |33       |efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg |
|--------|----------------|--------|---------|-----------------------------------------|

[2024-12-30 09:40:40 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pic
        where feed_id = 26
 {executed in 0 msec}
[2024-12-30 09:40:40 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3e5fe979-fe9c-4ed6-9ad7-c1dbf4f2538f.jpg |
|-----------------------------------------|

[2024-12-30 09:40:40 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.user_id AS writerUserId, feed_comment_id as feedCommentId, comment,
        if(nick_name is null , uid, nick_name) as writerNm, pic as writerPic
        FROM feed_comment A
        join user B
        on a.user_id = b.user_id
        WHERE feed_id = 26
        ORDER BY feed_comment_id DESC
        LIMIT 3, 1
 {executed in 1 msec}
[2024-12-30 09:40:40 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----------------|--------|---------|----|
|user_id |feed_comment_id |comment |writernm |pic |
|--------|----------------|--------|---------|----|
|--------|----------------|--------|---------|----|

[2024-12-30 09:40:40 INFO http-nio-8080-exec-7] [com.green.greengram.config.jwt.TokenAuthenticationFilter] AuthorizationHeader: null
[2024-12-30 09:40:40 INFO http-nio-8080-exec-7] [com.green.greengram.config.jwt.TokenAuthenticationFilter] Token: null
[2024-12-30 09:40:40 INFO http-nio-8080-exec-10] [com.green.greengram.config.jwt.TokenAuthenticationFilter] AuthorizationHeader: null
[2024-12-30 09:40:40 INFO http-nio-8080-exec-10] [com.green.greengram.config.jwt.TokenAuthenticationFilter] Token: null
[2024-12-30 09:40:40 INFO http-nio-8080-exec-8] [com.green.greengram.config.jwt.TokenAuthenticationFilter] AuthorizationHeader: null
[2024-12-30 09:40:40 INFO http-nio-8080-exec-8] [com.green.greengram.config.jwt.TokenAuthenticationFilter] Token: null
[2024-12-30 09:40:40 INFO http-nio-8080-exec-5] [com.green.greengram.config.jwt.TokenAuthenticationFilter] AuthorizationHeader: null
[2024-12-30 09:40:40 INFO http-nio-8080-exec-5] [com.green.greengram.config.jwt.TokenAuthenticationFilter] Token: null
[2024-12-30 09:40:40 INFO http-nio-8080-exec-9] [com.green.greengram.config.jwt.TokenAuthenticationFilter] AuthorizationHeader: null
[2024-12-30 09:40:40 INFO http-nio-8080-exec-9] [com.green.greengram.config.jwt.TokenAuthenticationFilter] Token: null
[2024-12-30 09:40:40 INFO http-nio-8080-exec-6] [com.green.greengram.config.jwt.TokenAuthenticationFilter] AuthorizationHeader: null
[2024-12-30 09:40:40 INFO http-nio-8080-exec-4] [com.green.greengram.config.jwt.TokenAuthenticationFilter] AuthorizationHeader: null
[2024-12-30 09:40:40 INFO http-nio-8080-exec-4] [com.green.greengram.config.jwt.TokenAuthenticationFilter] Token: null
[2024-12-30 09:40:40 INFO http-nio-8080-exec-6] [com.green.greengram.config.jwt.TokenAuthenticationFilter] Token: null
[2024-12-30 09:40:40 WARN http-nio-8080-exec-10] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/1/efb8e328-12f0-486a-a8aa-01ca8c43c238.jpg.]
[2024-12-30 09:40:40 INFO http-nio-8080-exec-3] [com.green.greengram.config.jwt.TokenAuthenticationFilter] AuthorizationHeader: null
[2024-12-30 09:40:40 INFO http-nio-8080-exec-3] [com.green.greengram.config.jwt.TokenAuthenticationFilter] Token: null
[2024-12-30 09:40:40 INFO http-nio-8080-exec-1] [com.green.greengram.config.jwt.TokenAuthenticationFilter] AuthorizationHeader: null
[2024-12-30 09:40:40 INFO http-nio-8080-exec-1] [com.green.greengram.config.jwt.TokenAuthenticationFilter] Token: null
[2024-12-30 09:40:40 INFO http-nio-8080-exec-2] [com.green.greengram.config.jwt.TokenAuthenticationFilter] AuthorizationHeader: null
[2024-12-30 09:40:40 INFO http-nio-8080-exec-2] [com.green.greengram.config.jwt.TokenAuthenticationFilter] Token: null
[2024-12-30 09:40:40 INFO http-nio-8080-exec-7] [com.green.greengram.config.jwt.TokenAuthenticationFilter] AuthorizationHeader: null
[2024-12-30 09:40:40 INFO http-nio-8080-exec-5] [com.green.greengram.config.jwt.TokenAuthenticationFilter] AuthorizationHeader: null
[2024-12-30 09:40:40 INFO http-nio-8080-exec-7] [com.green.greengram.config.jwt.TokenAuthenticationFilter] Token: null
[2024-12-30 09:40:40 INFO http-nio-8080-exec-5] [com.green.greengram.config.jwt.TokenAuthenticationFilter] Token: null
[2024-12-30 09:40:40 INFO http-nio-8080-exec-8] [com.green.greengram.config.jwt.TokenAuthenticationFilter] AuthorizationHeader: null
[2024-12-30 09:40:40 INFO http-nio-8080-exec-8] [com.green.greengram.config.jwt.TokenAuthenticationFilter] Token: null
[2024-12-30 09:40:40 INFO http-nio-8080-exec-10] [com.green.greengram.config.jwt.TokenAuthenticationFilter] AuthorizationHeader: null
[2024-12-30 09:40:40 INFO http-nio-8080-exec-10] [com.green.greengram.config.jwt.TokenAuthenticationFilter] Token: null
[2024-12-30 09:40:40 INFO http-nio-8080-exec-9] [com.green.greengram.config.jwt.TokenAuthenticationFilter] AuthorizationHeader: null
[2024-12-30 09:40:40 INFO http-nio-8080-exec-9] [com.green.greengram.config.jwt.TokenAuthenticationFilter] Token: null
[2024-12-30 09:40:40 INFO http-nio-8080-exec-4] [com.green.greengram.config.jwt.TokenAuthenticationFilter] AuthorizationHeader: null
[2024-12-30 09:40:40 INFO http-nio-8080-exec-4] [com.green.greengram.config.jwt.TokenAuthenticationFilter] Token: null
[2024-12-30 09:40:40 INFO http-nio-8080-exec-7] [com.green.greengram.config.jwt.TokenAuthenticationFilter] AuthorizationHeader: null
[2024-12-30 09:40:40 INFO http-nio-8080-exec-8] [com.green.greengram.config.jwt.TokenAuthenticationFilter] AuthorizationHeader: null
[2024-12-30 09:40:40 INFO http-nio-8080-exec-8] [com.green.greengram.config.jwt.TokenAuthenticationFilter] Token: null
[2024-12-30 09:40:40 INFO http-nio-8080-exec-7] [com.green.greengram.config.jwt.TokenAuthenticationFilter] Token: null
[2024-12-30 09:40:40 INFO http-nio-8080-exec-2] [com.green.greengram.config.jwt.TokenAuthenticationFilter] AuthorizationHeader: null
[2024-12-30 09:40:40 INFO http-nio-8080-exec-2] [com.green.greengram.config.jwt.TokenAuthenticationFilter] Token: null
[2024-12-30 09:40:40 INFO http-nio-8080-exec-3] [com.green.greengram.config.jwt.TokenAuthenticationFilter] AuthorizationHeader: null
[2024-12-30 09:40:40 INFO http-nio-8080-exec-3] [com.green.greengram.config.jwt.TokenAuthenticationFilter] Token: null
[2024-12-30 09:40:40 INFO http-nio-8080-exec-5] [com.green.greengram.config.jwt.TokenAuthenticationFilter] AuthorizationHeader: null
[2024-12-30 09:40:40 INFO http-nio-8080-exec-5] [com.green.greengram.config.jwt.TokenAuthenticationFilter] Token: null
[2024-12-30 09:40:40 INFO http-nio-8080-exec-1] [com.green.greengram.config.jwt.TokenAuthenticationFilter] AuthorizationHeader: null
[2024-12-30 09:40:40 INFO http-nio-8080-exec-1] [com.green.greengram.config.jwt.TokenAuthenticationFilter] Token: null
[2024-12-30 09:40:40 INFO http-nio-8080-exec-10] [com.green.greengram.config.jwt.TokenAuthenticationFilter] AuthorizationHeader: null
[2024-12-30 09:40:40 INFO http-nio-8080-exec-10] [com.green.greengram.config.jwt.TokenAuthenticationFilter] Token: null
[2024-12-30 09:40:40 INFO http-nio-8080-exec-9] [com.green.greengram.config.jwt.TokenAuthenticationFilter] AuthorizationHeader: null
[2024-12-30 09:40:40 INFO http-nio-8080-exec-9] [com.green.greengram.config.jwt.TokenAuthenticationFilter] Token: null
[2024-12-30 09:40:44 INFO http-nio-8080-exec-4] [com.green.greengram.config.jwt.TokenAuthenticationFilter] AuthorizationHeader: null
[2024-12-30 09:40:44 INFO http-nio-8080-exec-4] [com.green.greengram.config.jwt.TokenAuthenticationFilter] Token: null
[2024-12-30 10:12:49 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 33 class path changes (0 additions, 0 deletions, 33 modifications)
[2024-12-30 10:12:49 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-30 10:12:49 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-30 10:12:49 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-30 10:12:49 INFO restartedMain] [com.green.greengram.GreenGramTdd] Starting GreenGramTdd using Java 17.0.13 with PID 6540 (D:\Students\jang jin seong\GreenGramTdd\build\classes\java\main started by Administrator in D:\Students\jang jin seong\GreenGramTdd)
[2024-12-30 10:12:49 INFO restartedMain] [com.green.greengram.GreenGramTdd] No active profile set, falling back to 1 default profile: "default"
[2024-12-30 10:12:49 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-30 10:12:49 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-30 10:12:49 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-30 10:12:49 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-30 10:12:49 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-30 10:12:49 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 235 ms
[2024-12-30 10:12:49 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MFU 생성자: D:\Students\jang jin seong\download\greengram_ver3
[2024-12-30 10:12:49 INFO restartedMain] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Starting...
[2024-12-30 10:12:49 INFO restartedMain] [com.zaxxer.hikari.pool.HikariPool] HikariPool-2 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3cf6ec9b
[2024-12-30 10:12:49 INFO restartedMain] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Start completed.
[2024-12-30 10:12:49 WARN restartedMain] [org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration] 

Using generated security password: d818cbb2-f8a1-41a6-b2e5-19be5252af1e

This generated password is for development use only. Your security configuration must be updated before running your application in production.

[2024-12-30 10:12:49 INFO restartedMain] [org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer] Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
[2024-12-30 10:12:49 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-30 10:12:49 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-30 10:12:49 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-30 10:12:49 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-30 10:12:49 INFO restartedMain] [com.green.greengram.GreenGramTdd] Started GreenGramTdd in 0.457 seconds (process running for 1966.0)
[2024-12-30 10:12:49 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-30 10:22:50 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-30 10:22:50 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-30 10:22:50 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-30 10:22:50 INFO http-nio-8080-exec-1] [com.green.greengram.config.jwt.TokenAuthenticationFilter] AuthorizationHeader: null
[2024-12-30 10:22:50 INFO http-nio-8080-exec-1] [com.green.greengram.config.jwt.TokenAuthenticationFilter] Token: null
[2024-12-30 10:22:50 INFO http-nio-8080-exec-2] [com.green.greengram.config.jwt.TokenAuthenticationFilter] AuthorizationHeader: null
[2024-12-30 10:22:50 INFO http-nio-8080-exec-2] [com.green.greengram.config.jwt.TokenAuthenticationFilter] Token: null
[2024-12-30 10:22:50 INFO http-nio-8080-exec-3] [com.green.greengram.config.jwt.TokenAuthenticationFilter] AuthorizationHeader: null
[2024-12-30 10:22:50 INFO http-nio-8080-exec-3] [com.green.greengram.config.jwt.TokenAuthenticationFilter] Token: null
[2024-12-30 10:22:50 INFO http-nio-8080-exec-6] [com.green.greengram.config.jwt.TokenAuthenticationFilter] AuthorizationHeader: null
[2024-12-30 10:22:50 INFO http-nio-8080-exec-5] [com.green.greengram.config.jwt.TokenAuthenticationFilter] AuthorizationHeader: null
[2024-12-30 10:22:50 INFO http-nio-8080-exec-4] [com.green.greengram.config.jwt.TokenAuthenticationFilter] AuthorizationHeader: null
[2024-12-30 10:22:50 INFO http-nio-8080-exec-6] [com.green.greengram.config.jwt.TokenAuthenticationFilter] Token: null
[2024-12-30 10:22:50 INFO http-nio-8080-exec-5] [com.green.greengram.config.jwt.TokenAuthenticationFilter] Token: null
[2024-12-30 10:22:50 INFO http-nio-8080-exec-4] [com.green.greengram.config.jwt.TokenAuthenticationFilter] Token: null
[2024-12-30 10:22:50 INFO http-nio-8080-exec-7] [com.green.greengram.config.jwt.TokenAuthenticationFilter] AuthorizationHeader: null
[2024-12-30 10:22:50 INFO http-nio-8080-exec-7] [com.green.greengram.config.jwt.TokenAuthenticationFilter] Token: null
[2024-12-30 10:22:50 INFO http-nio-8080-exec-8] [com.green.greengram.config.jwt.TokenAuthenticationFilter] AuthorizationHeader: null
[2024-12-30 10:22:50 INFO http-nio-8080-exec-8] [com.green.greengram.config.jwt.TokenAuthenticationFilter] Token: null
[2024-12-30 10:22:51 INFO http-nio-8080-exec-8] [org.springdoc.api.AbstractOpenApiResource] Init duration for springdoc-openapi is: 201 ms
[2024-12-30 10:34:52 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Shutdown initiated...
[2024-12-30 10:34:52 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Shutdown completed.
[2024-12-30 11:05:47 INFO background-preinit] [org.hibernate.validator.internal.util.Version] HV000001: Hibernate Validator 8.0.1.Final
[2024-12-30 11:05:47 INFO Test worker] [com.green.greengram.feed.like.FeedLikeMapperTest] Starting FeedLikeMapperTest using Java 17.0.13 with PID 11304 (started by Administrator in D:\Students\jang jin seong\GreenGramTdd)
[2024-12-30 11:05:47 INFO Test worker] [com.green.greengram.feed.like.FeedLikeMapperTest] The following 1 profile is active: "test"
[2024-12-30 11:05:48 INFO Test worker] [com.green.greengram.feed.like.FeedLikeMapperTest] Started FeedLikeMapperTest in 0.969 seconds (process running for 1.835)
[2024-12-30 11:05:48 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-30 11:05:48 INFO Test worker] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@11e9ac24
[2024-12-30 11:05:48 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-30 11:05:48 DEBUGTest worker] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select * from feed_like
 {executed in 1 msec}
[2024-12-30 11:05:48 INFO Test worker] [jdbc.resultsettable] 
|--------|--------|--------------------|
|feed_id |user_id |created_at          |
|--------|--------|--------------------|
|1       |2       |2024-11-01 10:10:01 |
|2       |1       |2024-11-01 10:10:02 |
|3       |2       |2024-11-01 10:10:03 |
|--------|--------|--------------------|

[2024-12-30 11:05:48 DEBUGTest worker] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select * from feed_like where feed_id =5 and user_id = 2
 {executed in 0 msec}
[2024-12-30 11:05:48 INFO Test worker] [jdbc.resultsettable] 
|--------|--------|-----------|
|feed_id |user_id |created_at |
|--------|--------|-----------|
|--------|--------|-----------|

[2024-12-30 11:05:48 DEBUGTest worker] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_like
        set feed_id = 5,
            user_id = 2
 {executed in 2 msec}
[2024-12-30 11:05:48 DEBUGTest worker] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select * from feed_like where feed_id =5 and user_id = 2
 {executed in 0 msec}
[2024-12-30 11:05:48 INFO Test worker] [jdbc.resultsettable] 
|--------|--------|--------------------|
|feed_id |user_id |created_at          |
|--------|--------|--------------------|
|5       |2       |2024-12-30 11:05:48 |
|--------|--------|--------------------|

[2024-12-30 11:05:48 DEBUGTest worker] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select * from feed_like
 {executed in 1 msec}
[2024-12-30 11:05:48 INFO Test worker] [jdbc.resultsettable] 
|--------|--------|--------------------|
|feed_id |user_id |created_at          |
|--------|--------|--------------------|
|1       |2       |2024-11-01 10:10:01 |
|2       |1       |2024-11-01 10:10:02 |
|3       |2       |2024-11-01 10:10:03 |
|5       |2       |2024-12-30 11:05:48 |
|--------|--------|--------------------|

[2024-12-30 11:05:48 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-30 11:05:48 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-30 11:06:54 INFO background-preinit] [org.hibernate.validator.internal.util.Version] HV000001: Hibernate Validator 8.0.1.Final
[2024-12-30 11:06:55 INFO Test worker] [com.green.greengram.feed.like.FeedLikeMapperTest] Starting FeedLikeMapperTest using Java 17.0.13 with PID 11400 (started by Administrator in D:\Students\jang jin seong\GreenGramTdd)
[2024-12-30 11:06:55 INFO Test worker] [com.green.greengram.feed.like.FeedLikeMapperTest] The following 1 profile is active: "test"
[2024-12-30 11:06:55 INFO Test worker] [com.green.greengram.feed.like.FeedLikeMapperTest] Started FeedLikeMapperTest in 0.932 seconds (process running for 1.777)
[2024-12-30 11:06:55 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-30 11:06:55 INFO Test worker] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@74f280bd
[2024-12-30 11:06:55 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-30 11:06:56 DEBUGTest worker] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select * from feed_like
 {executed in 1 msec}
[2024-12-30 11:06:56 INFO Test worker] [jdbc.resultsettable] 
|--------|--------|--------------------|
|feed_id |user_id |created_at          |
|--------|--------|--------------------|
|1       |2       |2024-11-01 10:10:01 |
|2       |1       |2024-11-01 10:10:02 |
|3       |2       |2024-11-01 10:10:03 |
|--------|--------|--------------------|

[2024-12-30 11:06:56 DEBUGTest worker] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select * from feed_like where feed_id =5 and user_id = 2
 {executed in 1 msec}
[2024-12-30 11:06:56 INFO Test worker] [jdbc.resultsettable] 
|--------|--------|-----------|
|feed_id |user_id |created_at |
|--------|--------|-----------|
|--------|--------|-----------|

[2024-12-30 11:06:56 DEBUGTest worker] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_like
        set feed_id = 5,
            user_id = 2
 {executed in 0 msec}
[2024-12-30 11:06:56 DEBUGTest worker] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select * from feed_like where feed_id =5 and user_id = 2
 {executed in 1 msec}
[2024-12-30 11:06:56 INFO Test worker] [jdbc.resultsettable] 
|--------|--------|--------------------|
|feed_id |user_id |created_at          |
|--------|--------|--------------------|
|5       |2       |2024-12-30 11:06:56 |
|--------|--------|--------------------|

[2024-12-30 11:06:56 DEBUGTest worker] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select * from feed_like
 {executed in 0 msec}
[2024-12-30 11:06:56 INFO Test worker] [jdbc.resultsettable] 
|--------|--------|--------------------|
|feed_id |user_id |created_at          |
|--------|--------|--------------------|
|1       |2       |2024-11-01 10:10:01 |
|2       |1       |2024-11-01 10:10:02 |
|3       |2       |2024-11-01 10:10:03 |
|5       |2       |2024-12-30 11:06:56 |
|--------|--------|--------------------|

[2024-12-30 11:06:56 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-30 11:06:56 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-30 11:40:53 INFO background-preinit] [org.hibernate.validator.internal.util.Version] HV000001: Hibernate Validator 8.0.1.Final
[2024-12-30 11:40:53 INFO Test worker] [com.green.greengram.feed.like.FeedLikeMapperTest] Starting FeedLikeMapperTest using Java 17.0.13 with PID 7044 (started by Administrator in D:\Students\jang jin seong\GreenGramTdd)
[2024-12-30 11:40:53 INFO Test worker] [com.green.greengram.feed.like.FeedLikeMapperTest] The following 1 profile is active: "test"
[2024-12-30 11:40:53 INFO Test worker] [com.green.greengram.feed.like.FeedLikeMapperTest] Started FeedLikeMapperTest in 0.973 seconds (process running for 1.817)
[2024-12-30 11:40:53 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-30 11:40:54 INFO Test worker] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4ffced4e
[2024-12-30 11:40:54 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-30 11:40:54 DEBUGTest worker] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select * from feed_like
 {executed in 1 msec}
[2024-12-30 11:40:54 INFO Test worker] [jdbc.resultsettable] 
|--------|--------|--------------------|
|feed_id |user_id |created_at          |
|--------|--------|--------------------|
|1       |2       |2024-11-01 10:10:01 |
|2       |1       |2024-11-01 10:10:02 |
|3       |2       |2024-11-01 10:10:03 |
|--------|--------|--------------------|

[2024-12-30 11:40:54 DEBUGTest worker] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select * from feed_like where feed_id =5 and user_id = 2
 {executed in 0 msec}
[2024-12-30 11:40:54 INFO Test worker] [jdbc.resultsettable] 
|--------|--------|-----------|
|feed_id |user_id |created_at |
|--------|--------|-----------|
|--------|--------|-----------|

[2024-12-30 11:40:54 DEBUGTest worker] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_like
        set feed_id = 5,
            user_id = 2
 {executed in 0 msec}
[2024-12-30 11:40:54 DEBUGTest worker] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select * from feed_like where feed_id =5 and user_id = 2
 {executed in 0 msec}
[2024-12-30 11:40:54 INFO Test worker] [jdbc.resultsettable] 
|--------|--------|--------------------|
|feed_id |user_id |created_at          |
|--------|--------|--------------------|
|5       |2       |2024-12-30 11:40:54 |
|--------|--------|--------------------|

[2024-12-30 11:40:54 DEBUGTest worker] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select * from feed_like
 {executed in 0 msec}
[2024-12-30 11:40:54 INFO Test worker] [jdbc.resultsettable] 
|--------|--------|--------------------|
|feed_id |user_id |created_at          |
|--------|--------|--------------------|
|1       |2       |2024-11-01 10:10:01 |
|2       |1       |2024-11-01 10:10:02 |
|3       |2       |2024-11-01 10:10:03 |
|5       |2       |2024-12-30 11:40:54 |
|--------|--------|--------------------|

[2024-12-30 11:40:54 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-30 11:40:54 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-30 11:41:53 INFO background-preinit] [org.hibernate.validator.internal.util.Version] HV000001: Hibernate Validator 8.0.1.Final
[2024-12-30 11:41:53 INFO Test worker] [com.green.greengram.feed.like.FeedLikeMapperTest] Starting FeedLikeMapperTest using Java 17.0.13 with PID 1080 (started by Administrator in D:\Students\jang jin seong\GreenGramTdd)
[2024-12-30 11:41:53 INFO Test worker] [com.green.greengram.feed.like.FeedLikeMapperTest] The following 1 profile is active: "test"
[2024-12-30 11:41:54 INFO Test worker] [com.green.greengram.feed.like.FeedLikeMapperTest] Started FeedLikeMapperTest in 0.936 seconds (process running for 1.8)
[2024-12-30 11:41:54 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-30 11:41:54 INFO Test worker] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6f91fbda
[2024-12-30 11:41:54 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-30 11:41:54 DEBUGTest worker] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select * from feed_like
 {executed in 1 msec}
[2024-12-30 11:41:54 INFO Test worker] [jdbc.resultsettable] 
|--------|--------|--------------------|
|feed_id |user_id |created_at          |
|--------|--------|--------------------|
|1       |2       |2024-11-01 10:10:01 |
|2       |1       |2024-11-01 10:10:02 |
|3       |2       |2024-11-01 10:10:03 |
|--------|--------|--------------------|

[2024-12-30 11:41:54 DEBUGTest worker] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select * from feed_like where feed_id =5 and user_id = 2
 {executed in 1 msec}
[2024-12-30 11:41:54 INFO Test worker] [jdbc.resultsettable] 
|--------|--------|-----------|
|feed_id |user_id |created_at |
|--------|--------|-----------|
|--------|--------|-----------|

[2024-12-30 11:41:54 DEBUGTest worker] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_like
        set feed_id = 5,
            user_id = 2
 {executed in 0 msec}
[2024-12-30 11:41:54 DEBUGTest worker] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select * from feed_like where feed_id =5 and user_id = 2
 {executed in 0 msec}
[2024-12-30 11:41:54 INFO Test worker] [jdbc.resultsettable] 
|--------|--------|--------------------|
|feed_id |user_id |created_at          |
|--------|--------|--------------------|
|5       |2       |2024-12-30 11:41:54 |
|--------|--------|--------------------|

[2024-12-30 11:41:54 DEBUGTest worker] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select * from feed_like
 {executed in 0 msec}
[2024-12-30 11:41:54 INFO Test worker] [jdbc.resultsettable] 
|--------|--------|--------------------|
|feed_id |user_id |created_at          |
|--------|--------|--------------------|
|1       |2       |2024-11-01 10:10:01 |
|2       |1       |2024-11-01 10:10:02 |
|3       |2       |2024-11-01 10:10:03 |
|5       |2       |2024-12-30 11:41:54 |
|--------|--------|--------------------|

[2024-12-30 11:41:54 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-30 11:41:54 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-30 12:15:25 INFO background-preinit] [org.hibernate.validator.internal.util.Version] HV000001: Hibernate Validator 8.0.1.Final
[2024-12-30 12:15:25 INFO Test worker] [com.green.greengram.feed.like.FeedLikeMapperTest] Starting FeedLikeMapperTest using Java 17.0.13 with PID 3556 (started by Administrator in D:\Students\jang jin seong\GreenGramTdd)
[2024-12-30 12:15:25 INFO Test worker] [com.green.greengram.feed.like.FeedLikeMapperTest] The following 1 profile is active: "test"
[2024-12-30 12:15:25 INFO Test worker] [com.green.greengram.feed.like.FeedLikeMapperTest] Started FeedLikeMapperTest in 0.903 seconds (process running for 1.745)
[2024-12-30 12:15:25 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-30 12:15:25 INFO Test worker] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@11e9ac24
[2024-12-30 12:15:25 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-30 12:15:26 DEBUGTest worker] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select * from feed_like
 {executed in 1 msec}
[2024-12-30 12:15:26 INFO Test worker] [jdbc.resultsettable] 
|--------|--------|--------------------|
|feed_id |user_id |created_at          |
|--------|--------|--------------------|
|1       |2       |2024-11-01 10:10:01 |
|2       |1       |2024-11-01 10:10:02 |
|3       |2       |2024-11-01 10:10:03 |
|--------|--------|--------------------|

[2024-12-30 12:15:26 DEBUGTest worker] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select * from feed_like where feed_id =1 and user_id = 2
 {executed in 0 msec}
[2024-12-30 12:15:26 INFO Test worker] [jdbc.resultsettable] 
|--------|--------|--------------------|
|feed_id |user_id |created_at          |
|--------|--------|--------------------|
|1       |2       |2024-11-01 10:10:01 |
|--------|--------|--------------------|

[2024-12-30 12:15:26 DEBUGTest worker] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. delete
        from feed_like
        where feed_id = 1
        and user_id = 2
 {executed in 0 msec}
[2024-12-30 12:15:26 DEBUGTest worker] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select * from feed_like where feed_id =1 and user_id = 2
 {executed in 0 msec}
[2024-12-30 12:15:26 INFO Test worker] [jdbc.resultsettable] 
|--------|--------|-----------|
|feed_id |user_id |created_at |
|--------|--------|-----------|
|--------|--------|-----------|

[2024-12-30 12:15:26 DEBUGTest worker] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select * from feed_like
 {executed in 0 msec}
[2024-12-30 12:15:26 INFO Test worker] [jdbc.resultsettable] 
|--------|--------|--------------------|
|feed_id |user_id |created_at          |
|--------|--------|--------------------|
|2       |1       |2024-11-01 10:10:02 |
|3       |2       |2024-11-01 10:10:03 |
|--------|--------|--------------------|

[2024-12-30 12:15:26 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-30 12:15:26 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-30 13:18:22 INFO background-preinit] [org.hibernate.validator.internal.util.Version] HV000001: Hibernate Validator 8.0.1.Final
[2024-12-30 13:18:22 INFO Test worker] [com.green.greengram.feed.FeedPicMapperTest] Starting FeedPicMapperTest using Java 17.0.13 with PID 3404 (started by Administrator in D:\Students\jang jin seong\GreenGramTdd)
[2024-12-30 13:18:22 INFO Test worker] [com.green.greengram.feed.FeedPicMapperTest] The following 1 profile is active: "test"
[2024-12-30 13:18:23 INFO Test worker] [com.green.greengram.feed.FeedPicMapperTest] Started FeedPicMapperTest in 0.987 seconds (process running for 1.851)
[2024-12-30 13:18:23 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-30 13:18:23 INFO Test worker] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6de43bc1
[2024-12-30 13:18:23 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-30 13:18:24 DEBUGTest worker] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select * from feed_pic where feed_id = 5
 {executed in 6 msec}
[2024-12-30 13:18:24 INFO Test worker] [jdbc.resultsettable] 
|--------|----|-----------|
|feed_id |pic |created_at |
|--------|----|-----------|
|--------|----|-----------|

[2024-12-30 13:18:24 WARN Test worker] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1064-42000: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '' at line 3
[2024-12-30 13:18:24 ERRORTest worker] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_pic
        (feed_id, pic)
        values
 {FAILED after 1 msec}
java.sql.SQLSyntaxErrorException: (conn=83) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '' at line 3
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy3/jdk.proxy3.$Proxy79.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy82.insFeedPic(Unknown Source)
	at com.green.greengram.feed.FeedPicMapperTest.insFeedPic(FeedPicMapperTest.java:58)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
	at jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:121)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
[2024-12-30 13:18:24 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-30 13:18:24 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-30 13:20:01 INFO background-preinit] [org.hibernate.validator.internal.util.Version] HV000001: Hibernate Validator 8.0.1.Final
[2024-12-30 13:20:01 INFO Test worker] [com.green.greengram.feed.FeedPicMapperTest] Starting FeedPicMapperTest using Java 17.0.13 with PID 1156 (started by Administrator in D:\Students\jang jin seong\GreenGramTdd)
[2024-12-30 13:20:01 INFO Test worker] [com.green.greengram.feed.FeedPicMapperTest] The following 1 profile is active: "test"
[2024-12-30 13:20:02 INFO Test worker] [com.green.greengram.feed.FeedPicMapperTest] Started FeedPicMapperTest in 0.951 seconds (process running for 1.794)
[2024-12-30 13:20:02 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-30 13:20:02 INFO Test worker] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2fd9fb34
[2024-12-30 13:20:02 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-30 13:20:02 DEBUGTest worker] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select * from feed_pic where feed_id = 5
 {executed in 0 msec}
[2024-12-30 13:20:02 INFO Test worker] [jdbc.resultsettable] 
|--------|----|-----------|
|feed_id |pic |created_at |
|--------|----|-----------|
|--------|----|-----------|

[2024-12-30 13:20:02 DEBUGTest worker] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_pic
        (feed_id, pic)
        values
         (  
            5 ,'a.jpg'
         ),( 
            5 ,'b.jpg'
         ),( 
            5 ,'c.jpg'
         )
 {executed in 5 msec}
[2024-12-30 13:20:02 DEBUGTest worker] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select * from feed_pic where feed_id = 5
 {executed in 0 msec}
[2024-12-30 13:20:02 INFO Test worker] [jdbc.resultsettable] 
|--------|------|--------------------|
|feed_id |pic   |created_at          |
|--------|------|--------------------|
|5       |a.jpg |2024-12-30 13:20:02 |
|5       |b.jpg |2024-12-30 13:20:02 |
|5       |c.jpg |2024-12-30 13:20:02 |
|--------|------|--------------------|

[2024-12-30 13:20:03 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-30 13:20:03 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-30 14:09:07 INFO background-preinit] [org.hibernate.validator.internal.util.Version] HV000001: Hibernate Validator 8.0.1.Final
[2024-12-30 14:09:07 INFO Test worker] [com.green.greengram.feed.FeedPicMapperTest] Starting FeedPicMapperTest using Java 17.0.13 with PID 9592 (started by Administrator in D:\Students\jang jin seong\GreenGramTdd)
[2024-12-30 14:09:07 INFO Test worker] [com.green.greengram.feed.FeedPicMapperTest] The following 1 profile is active: "test"
[2024-12-30 14:09:07 INFO Test worker] [com.green.greengram.feed.FeedPicMapperTest] Started FeedPicMapperTest in 0.918 seconds (process running for 1.742)
[2024-12-30 14:09:07 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-30 14:09:07 INFO Test worker] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@12abcd1e
[2024-12-30 14:09:07 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-30 14:09:08 DEBUGTest worker] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select * from feed_pic where feed_id = 5
 {executed in 1 msec}
[2024-12-30 14:09:08 INFO Test worker] [jdbc.resultsettable] 
|--------|----|-----------|
|feed_id |pic |created_at |
|--------|----|-----------|
|--------|----|-----------|

[2024-12-30 14:09:08 DEBUGTest worker] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_pic
        (feed_id, pic)
        values
         (  
            5 ,'a.jpg'
         ),( 
            5 ,'b.jpg'
         ),( 
            5 ,'c.jpg'
         )
 {executed in 1 msec}
[2024-12-30 14:09:08 DEBUGTest worker] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select * from feed_pic where feed_id = 5
 {executed in 0 msec}
[2024-12-30 14:09:08 INFO Test worker] [jdbc.resultsettable] 
|--------|------|--------------------|
|feed_id |pic   |created_at          |
|--------|------|--------------------|
|5       |a.jpg |2024-12-30 14:09:08 |
|5       |b.jpg |2024-12-30 14:09:08 |
|5       |c.jpg |2024-12-30 14:09:08 |
|--------|------|--------------------|

[2024-12-30 14:09:08 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-30 14:09:08 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
